{"version":3,"sources":["components/HomePage.tsx","components/PersonName.tsx","PeopleContext.tsx","people.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/NewPerson.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonName","React","memo","person","search","useLocation","console","log","to","pathname","slug","className","sex","name","PeopleContext","createContext","people","setPeople","PeopleProvider","children","useState","contextValue","useMemo","useEffect","fetch","then","response","json","Provider","value","PersonRow","useContext","useParams","father","find","vater","fatherName","mother","mutter","motherName","born","died","PeopleTable","location","navigate","useNavigate","searchParams","URLSearchParams","appliedQuery","get","query","setQuery","applieQuery","debounce","newQuery","set","delete","toString","sortBy","sortOrder","toLowerQuery","toLowerCase","filterByNameMotherFather","filter","includes","sort","a","b","localeCompare","placeholder","type","onChange","e","handleInputchange","target","map","classNames","onClick","handleSortTable","man","NewPerson","useForm","mode","register","handleSubmit","getValues","formState","errors","isValid","currentYear","Date","getFullYear","values","fathersFromServer","mothersFromServer","women","autoComplete","onSubmit","data","neuesPerson","required","pattern","style","height","id","htmlFor","min","message","max","disabled","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"wVAGaA,EAAqB,WAChC,OACE,2C,yCCISC,G,MAA8BC,IAAMC,MAAK,YAAiB,IAAdC,EAAa,EAAbA,OAC/CC,EAAWC,cAAXD,OAIR,OAFAE,QAAQC,IAAI,UAGV,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaN,EAAOO,MAC5BN,UAEFO,UAA0B,MAAfR,EAAOS,IAAc,eAAiB,cALnD,SAOGT,EAAOU,WCbDC,G,MAAgBb,IAAMc,cAA4B,CAC7DC,OAAQ,GACRC,UAAW,gBAGAC,EAA2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,EAA4BC,mBAAgB,IAA5C,mBAAOJ,EAAP,KAAeC,EAAf,KAEMI,EAAeC,mBAAQ,WAC3B,MAAO,CACLN,SACAC,eAED,CAACD,IAOJ,OALAO,qBAAU,WCpBHC,MAHL,qEAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDqBxBF,KAAKR,KACP,IAGD,cAACH,EAAcc,SAAf,CAAwBC,MAAOR,EAA/B,SACGF,KEpBMW,EAA6B7B,IAAMC,MAAK,YAAiB,IAAdC,EAAa,EAAbA,OAC9Ca,EAAWe,qBAAWjB,GAAtBE,OACAN,EAASsB,cAATtB,KACFuB,EAASjB,EAAOkB,MAAK,SAAAC,GAAK,OAAIA,EAAMtB,OAASV,EAAOiC,cACpDC,EAASrB,EAAOkB,MAAK,SAAAI,GAAM,OAAIA,EAAOzB,OAASV,EAAOoC,cAE5D,OACE,qBAAI5B,UAAS,iBAAYR,EAAOO,OAASA,EAAO,gBAAkB,IAAlE,UACE,6BAAI,cAAC,EAAD,CAAYP,OAAQA,MACxB,6BAAKA,EAAOS,MACZ,6BAAKT,EAAOqC,OACZ,6BAAKrC,EAAOsC,OACZ,6BACGR,EACI,cAAC,EAAD,CAAY9B,OAAQ8B,IACpB9B,EAAOiC,YAAc,YAE5B,6BACGC,EACI,cAAC,EAAD,CAAYlC,OAAQkC,IACpBlC,EAAOoC,YAAc,kBCvBrBG,G,MAAwBzC,IAAMC,MAAK,WAC9C,IAAMyC,EAAWtC,cACXuC,EAAWC,cACXC,EAAe,IAAIC,gBAAgBJ,EAASvC,QAC1CY,EAAWe,qBAAWjB,GAAtBE,OACFgC,EAAeF,EAAaG,IAAI,UAAY,GAClD,EAA0B7B,mBAAS4B,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEMC,EACFC,KAAS,SAACC,GACNA,EACFR,EAAaS,IAAI,QAASD,GAE1BR,EAAaU,OAAO,SAGtBZ,EAAS,IAAD,OAAKE,EAAaW,eACzB,KAOCC,EAASZ,EAAaG,IAAI,WAAa,GACvCU,EAAYb,EAAaG,IAAI,cAAgB,GAe7CW,EAAeZ,EAAaa,cAE5BC,EACF9C,EAAO+C,QAAO,SAAA5D,GAAM,OAAIA,EAAOU,KAAKgD,cACnCG,SAASJ,KACgB,OAAtBzD,EAAOiC,WACPjC,EAAOiC,WAAWyB,cAAcG,SAASJ,GACzC,MACsB,OAAtBzD,EAAOoC,WACPpC,EAAOoC,WAAWsB,cAAcG,SAASJ,GACzC,OAsBR,OApBAE,EAAyBG,MAAK,SAACC,EAAGC,GAChC,MAAe,SAAXT,GAAgC,QAAXA,EACL,QAAdC,EACKQ,EAAET,GAAQU,cAAcF,EAAER,IAG5BQ,EAAER,GAAQU,cAAcD,EAAET,IAGpB,SAAXA,GAAgC,SAAXA,EACL,QAAdC,GACOQ,EAAET,IAAaQ,EAAER,IAGnBQ,EAAER,IAAaS,EAAET,GAGrB,KAIP,gCACE,sBAAK/C,UAAU,mBAAf,UACE,uBACEA,UAAU,0BACV0D,YAAY,cACZC,KAAK,OACLzC,MAAOqB,EACPqB,SAAU,SAACC,GAAD,OA7DQ,SAACA,GACzBrB,EAASqB,GACTpB,EAAYoB,GA2DWC,CAAkBD,EAAEE,OAAO7C,UAG9C,cAAC,IAAD,CAAMlB,UAAU,oCAAoCH,GAAG,cAAvD,2BAKF,wBAAOG,UAAU,cAAjB,UACE,gCACE,qBACEA,UAAU,qBADZ,UAnDc,CAAC,OAAQ,MAAO,OAAQ,QAsDrBgE,KAAI,SAAA9D,GAAI,OACrB,oBACEF,UAAWiE,IAAW,oBAAqB,CACzC,yBAAwC,QAAdjB,GACrBD,IAAW7C,EAAKgD,cACrB,0BAAyC,SAAdF,GACtBD,IAAW7C,EAAKgD,gBAGvBgB,QAAS,kBA3EC,SAAChE,GACvBiC,EAAaS,IAAI,YAA2B,QAAdI,EAAsB,OAAS,OAEzD9C,EACFiC,EAAaS,IAAI,SAAU1C,GAE3BiC,EAAaU,OAAO,UAGtBZ,EAAS,IAAD,OAAKE,EAAaW,aAkECqB,CAAgBjE,EAAKgD,gBARtC,SAUGhD,GAHIA,MAMT,wCACA,6CAGJ,gCACGiD,EAAyBa,KAAI,SAAAI,GAAG,OAC/B,cAAC,EAAD,CACE5E,OAAQ4E,GACHA,EAAIrE,qB,sBCpHVsE,G,MAAsB/E,IAAMC,MAAK,WAC5C,MAA8B6B,qBAAWjB,GAAjCE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEhB,EAKIgE,YAAa,CACfC,KAAM,aALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,UAHF,IAIEC,UAAaC,EAJf,EAIeA,OAAQC,EAJvB,EAIuBA,QAKjBC,GAAc,IAAIC,MAAOC,cACzB/C,EAAWC,cACX+C,EAASP,IAETQ,EACF7E,EAAO+C,QAAO,SAAAgB,GAAG,MAAgB,MAAZA,EAAInE,KACtBmE,EAAItC,KAAOmD,EAAOpD,MAClBuC,EAAIvC,KAAOoD,EAAOpD,QACnBsD,EACF9E,EAAO+C,QAAO,SAAAgC,GAAK,MAAkB,MAAdA,EAAMnF,KAC1BmF,EAAMtD,KAAOmD,EAAOpD,MACpBuD,EAAMvD,KAAOoD,EAAOpD,QAgB3B,OACE,qCACE,mDAEA,sBAAK7B,UAAU,OAAf,UACE,wBACEA,UAAU,qBACV2D,KAAK,SACLO,QAAS,kBAAMjC,GAAU,IAH3B,kBAQA,uBACEoD,aAAa,MACbC,SAAUb,GA1BD,SAACc,GAChB,IAAIC,EAAcD,EACZxF,EAAI,UAAMyF,EAAYtF,KAAKgD,cAAvB,YAAwCsC,EAAY3D,MAE9D2D,EAAW,2BAAQA,GAAR,IAAqBzF,SAEhCO,EAAU,GAAD,mBAAKD,GAAL,CAAamF,KAEtBvD,EAAS,cAgBL,UAIE,+CACE0B,KAAK,OACL3D,UAAU,eACNwE,EAAS,OAAQ,CACnBiB,UAAU,EACVC,QAAS,mBALb,IAOEhC,YAAY,kBAEd,qBACEiC,MAAO,CAAEC,OAAQ,IADnB,SAGE,mBAAG5F,UAAU,IAAb,SAAkB4E,EAAO1E,MAAQ,wBAGnC,sBAAKF,UAAU,qBAAf,UACE,+CACE2D,KAAK,QACLkC,GAAG,cACCrB,EAAS,MAAO,CAClBiB,SAAU,sBAJd,IAMEvE,MAAM,OAER,uBAAO4E,QAAQ,aAAf,kBAEA,+CACEnC,KAAK,QACLkC,GAAG,cACCrB,EAAS,QAHf,IAIEtD,MAAM,OAER,uBAAO4E,QAAQ,aAAf,oBACClB,EAAO3E,KAAO,mBAGjB,gCACE,+CACE0D,KAAK,SACL3D,UAAU,wBACNwE,EAAS,OAAQ,CACnBiB,SAAU,mBACVM,IAAK,CACH7E,MAAO,KACP8E,QAAQ,8BAAD,OAAgClB,IAEzCmB,IAAK,CACH/E,MAAO4D,EACPkB,QAAQ,8BAAD,OAAgClB,OAX7C,IAcEpB,YAAY,qBAEd,qBACEiC,MAAO,CAAEC,OAAQ,IADnB,SAGE,mBAAG5F,UAAU,IAAb,SAAkB4E,EAAO/C,MAAQ+C,EAAO/C,KAAKmE,YAG/C,+CACErC,KAAK,SACL3D,UAAU,uBACVkG,UAAWjB,EAAOpD,MACd2C,EAAS,OAAQ,CACnBiB,SAAU,mBACVM,IAAK,CACH7E,MAAO+D,EAAOpD,KACdmE,QAAQ,qBAAD,OAAuBf,EAAOpD,KAA9B,gBAA0CiD,IAEnDmB,IAAK,CACH/E,OAAQ+D,EAAOpD,KAAO,IACtBmE,QAAS,cAZf,IAeEtC,YAAY,kBACZqC,IAAI,OACJE,IAAI,UAEN,qBACEN,MAAO,CAAEC,OAAQ,IADnB,SAGE,mBAAG5F,UAAU,IAAb,SAAkB4E,EAAO9C,MAAQ8C,EAAO9C,KAAKkE,eAIjD,sBAAKhG,UAAU,cAAf,UACE,mDACMwE,EAAS,eADf,IAEEd,YAAY,sBACZwC,UAAWjB,EAAOpD,KAClBgE,GAAG,SAJL,UAME,wBAAQ3E,MAAM,GAAd,iCACCgE,EAAkBlB,KAAI,SAAA1C,GAAM,OAC3B,wBAEEJ,MAAOI,EAAOpB,KAFhB,SAIGoB,EAAOpB,MAHHoB,EAAOpB,aAOlB,mDACMsE,EAAS,eADf,IAEEd,YAAY,sBACZmC,GAAG,SACHK,UAAWjB,EAAOpD,KAJpB,UAME,wBAAQX,MAAM,GAAd,iCACCiE,EAAkBnB,KAAI,SAAAoB,GAAK,OAC1B,wBAEElE,MAAOkE,EAAMlF,KAFf,SAIGkF,EAAMlF,MAHFkF,EAAMlF,gBASnB,uBACEyD,KAAK,SACL3D,UAAU,kBACVkG,UAAWrB,EACX3D,MAAM,qBC3JHiF,G,MAxBO,WACpB,OACE,sBAAKnG,UAAU,MAAf,UACE,8BACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAASA,UAAU,YAAYH,GAAG,IAAlC,uBACA,cAAC,IAAD,CAASG,UAAU,YAAYH,GAAG,UAAlC,8BAGJ,8CAEA,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuG,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,gBCnB/CC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40baeef5.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h2>HomePage</h2>\n  );\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Man } from '../types';\nimport './PersonName.scss';\n\ntype Props = {\n  person: Man,\n};\n\nexport const PersonName: React.FC<Props> = React.memo(({ person }) => {\n  const { search } = useLocation();\n  // eslint-disable-next-line\n  console.log('render');\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search,\n      }}\n      className={person.sex === 'm' ? 'Person__blue' : 'Person__red'}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { getPeople } from './people';\nimport { Man } from './types';\n\ntype ContextProps = {\n  people: Man[],\n  setPeople: (people: Man[]) => void,\n};\n\nexport const PeopleContext = React.createContext<ContextProps>({\n  people: [],\n  setPeople: () => { },\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Man[]>([]);\n\n  const contextValue = useMemo(() => {\n    return {\n      people,\n      setPeople,\n    };\n  }, [people]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return fetch(BASE_URL)\n    .then(response => response.json());\n};\n","import { useParams } from 'react-router-dom';\nimport React, { useContext } from 'react';\nimport { PersonName } from './PersonName';\nimport { Man } from '../types';\nimport './PersonRow.scss';\nimport { PeopleContext } from '../PeopleContext';\n\ntype Props = {\n  person: Man,\n};\n\nexport const PersonRow: React.FC<Props> = React.memo(({ person }) => {\n  const { people } = useContext(PeopleContext);\n  const { slug } = useParams();\n  const father = people.find(vater => vater.name === person.fatherName);\n  const mother = people.find(mutter => mutter.name === person.motherName);\n\n  return (\n    <tr className={`Person ${person.slug === slug ? 'Person__light' : ''}`}>\n      <td><PersonName person={person} /></td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {father\n          ? (<PersonName person={father} />)\n          : (person.fatherName || 'unknown')}\n      </td>\n      <td>\n        {mother\n          ? (<PersonName person={mother} />)\n          : (person.motherName || 'unknown')}\n      </td>\n    </tr>\n  );\n});\n","import React, { useContext, useState } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { PersonRow } from './PersonRow';\nimport './PeopleTable.scss';\nimport { PeopleContext } from '../PeopleContext';\n\nexport const PeopleTable: React.FC = React.memo(() => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const { people } = useContext(PeopleContext);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applieQuery\n    = debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigate(`?${searchParams.toString()}`);\n    }, 500);\n\n  const handleInputchange = (e: string) => {\n    setQuery(e);\n    applieQuery(e);\n  };\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const handleSortTable = (name: string) => {\n    searchParams.set('sortOrder', sortOrder === 'asc' ? 'desc' : 'asc');\n\n    if (name) {\n      searchParams.set('sortBy', name);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    navigate(`?${searchParams.toString()}`);\n  };\n\n  const nameOfColumns = ['Name', 'Sex', 'Born', 'Died'];\n  const toLowerQuery = appliedQuery.toLowerCase();\n\n  const filterByNameMotherFather\n    = people.filter(person => person.name.toLowerCase()\n      .includes(toLowerQuery)\n      || (person.fatherName !== null\n        ? person.fatherName.toLowerCase().includes(toLowerQuery)\n        : '')\n      || (person.motherName !== null\n        ? person.motherName.toLowerCase().includes(toLowerQuery)\n        : ''));\n\n  filterByNameMotherFather.sort((a, b) => {\n    if (sortBy === 'name' || sortBy === 'sex') {\n      if (sortOrder === 'asc') {\n        return b[sortBy].localeCompare(a[sortBy]);\n      }\n\n      return a[sortBy].localeCompare(b[sortBy]);\n    }\n\n    if (sortBy === 'born' || sortBy === 'died') {\n      if (sortOrder === 'asc') {\n        return (+b[sortBy]) - (+a[sortBy]);\n      }\n\n      return (+a[sortBy]) - (+b[sortBy]);\n    }\n\n    return 0;\n  });\n\n  return (\n    <div>\n      <div className=\"table-navigation\">\n        <input\n          className=\"table-navigation__input\"\n          placeholder=\"Find People\"\n          type=\"text\"\n          value={query}\n          onChange={(e) => handleInputchange(e.target.value)}\n        />\n\n        <Link className=\"table-navigation__addPersonButton\" to=\"/people/new\">\n          Add Person\n        </Link>\n      </div>\n\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr\n            className=\"PeopleTable__thead\"\n          >\n            {nameOfColumns.map(name => (\n              <th\n                className={classNames('PeopleTable__sort', {\n                  'PeopleTable__sort--asc': sortOrder === 'asc'\n                    && sortBy === name.toLowerCase(),\n                  'PeopleTable__sort--desc': sortOrder === 'desc'\n                    && sortBy === name.toLowerCase(),\n                })}\n                key={name}\n                onClick={() => handleSortTable(name.toLowerCase())}\n              >\n                {name}\n              </th>\n            ))}\n            <th>Father</th>\n            <th>Mother</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filterByNameMotherFather.map(man => (\n            <PersonRow\n              person={man}\n              key={man.slug}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n","import React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Man } from '../types';\nimport { PeopleContext } from '../PeopleContext';\nimport './NewPerson.scss';\n\nexport const NewPerson: React.FC = React.memo(() => {\n  const { people, setPeople } = useContext(PeopleContext);\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors, isValid },\n  } = useForm<Man>({\n    mode: 'onChange',\n  });\n\n  const currentYear = new Date().getFullYear();\n  const navigate = useNavigate();\n  const values = getValues();\n\n  const fathersFromServer\n    = people.filter(man => man.sex === 'm'\n      && man.died > values.born\n      && man.born < values.born);\n  const mothersFromServer\n    = people.filter(women => women.sex === 'f'\n      && women.died > values.born\n      && women.born < values.born);\n\n  // eslint-disable-next-line\n  // console.log(values.born);\n\n  const onSubmit = (data: Man) => {\n    let neuesPerson = data;\n    const slug = `${neuesPerson.name.toLowerCase()}-${neuesPerson.born}`;\n\n    neuesPerson = { ...neuesPerson, slug };\n\n    setPeople([...people, neuesPerson]);\n\n    navigate('/people');\n  };\n\n  return (\n    <>\n      <h1>Create new Person</h1>\n\n      <div className=\"form\">\n        <button\n          className=\"form__goBackButton\"\n          type=\"button\"\n          onClick={() => navigate(-1)}\n        >\n          Back\n        </button>\n\n        <form\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input\n            type=\"text\"\n            className=\"form__field\"\n            {...register('name', {\n              required: true,\n              pattern: /^[A-Za-z\\s]+$/,\n            })}\n            placeholder=\"Enter a name\"\n          />\n          <div\n            style={{ height: 20 }}\n          >\n            <p className=\"p\">{errors.name && 'Name is required!'}</p>\n          </div>\n\n          <div className=\"form__field--radio\">\n            <input\n              type=\"radio\"\n              id=\"choiseSex1\"\n              {...register('sex', {\n                required: 'Select a gender!',\n              })}\n              value=\"m\"\n            />\n            <label htmlFor=\"choiseSex1\">Male</label>\n\n            <input\n              type=\"radio\"\n              id=\"choiseSex2\"\n              {...register('sex')}\n              value=\"f\"\n            />\n            <label htmlFor=\"choiseSex2\">Female</label>\n            {errors.sex && 'Choose a sex!'}\n          </div>\n\n          <div>\n            <input\n              type=\"number\"\n              className=\"form__field bornDied\"\n              {...register('born', {\n                required: 'Enter birth day!',\n                min: {\n                  value: 1400,\n                  message: `Birth day beetwen 1400 and ${currentYear}`,\n                },\n                max: {\n                  value: currentYear,\n                  message: `Birth day beetwen 1400 and ${currentYear}`,\n                },\n              })}\n              placeholder=\"Enter birth day\"\n            />\n            <div\n              style={{ height: 20 }}\n            >\n              <p className=\"p\">{errors.born && errors.born.message}</p>\n            </div>\n\n            <input\n              type=\"number\"\n              className=\"form__field bornDied\"\n              disabled={!values.born}\n              {...register('died', {\n                required: 'Enter death day!',\n                min: {\n                  value: values.born,\n                  message: `Death day beetwen ${values.born} and ${currentYear}`,\n                },\n                max: {\n                  value: +values.born + 150,\n                  message: 'Too old',\n                },\n              })}\n              placeholder=\"Enter death day\"\n              min=\"1400\"\n              max=\"2022\"\n            />\n            <div\n              style={{ height: 20 }}\n            >\n              <p className=\"p\">{errors.died && errors.died.message}</p>\n            </div>\n          </div>\n\n          <div className=\"form__field\">\n            <select\n              {...register('fatherName')}\n              placeholder=\"Select fathers name\"\n              disabled={!values.born}\n              id=\"father\"\n            >\n              <option value=\"\">Select fathers name</option>\n              {fathersFromServer.map(father => (\n                <option\n                  key={father.name}\n                  value={father.name}\n                >\n                  {father.name}\n                </option>\n              ))}\n            </select>\n            <select\n              {...register('motherName')}\n              placeholder=\"Select mothers name\"\n              id=\"mother\"\n              disabled={!values.born}\n            >\n              <option value=\"\">Select mothers name</option>\n              {mothersFromServer.map(women => (\n                <option\n                  key={women.name}\n                  value={women.name}\n                >\n                  {women.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <input\n            type=\"submit\"\n            className=\"form__addButton\"\n            disabled={!isValid}\n            value=\"Add\"\n          />\n        </form>\n      </div>\n    </>\n  );\n});\n","import { Routes, Route, NavLink } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeopleTable } from './components/PeopleTable';\nimport { NewPerson } from './components/NewPerson';\n\nimport './App.scss';\nimport { PeopleProvider } from './PeopleContext';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <nav>\n        <div className=\"nav\">\n          <NavLink className=\"nav__link\" to=\"/\">Home Page</NavLink>\n          <NavLink className=\"nav__link\" to=\"/people\">People Page</NavLink>\n        </div>\n      </nav>\n      <h1>People table</h1>\n\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeopleTable />} />\n          <Route path=\"/people/new\" element={<NewPerson />} />\n          <Route path=\"/people/:slug\" element={<PeopleTable />} />\n        </Routes>\n      </PeopleProvider>\n\n    </div>\n  );\n};\n\nexport default App;\n","import { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}